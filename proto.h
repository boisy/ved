/* .cprotofiles.c */
void init_colors(void);
char *set_char_set(char *);
char *get_rc_charset(void);
char *display_change_attr(char *);
char *display_change_character(char *);
char *bindings_set(char *);
char *alias_set(char *);
void set_keybindings(void);
void block_cmd(void);
void block_delmarks(void);
void mark_block_start(void);
void mark_block_end(void);
void block_copy(void);
void block_delete(void);
void block_move(void);
void block_save(void);
void block_sort(void);
void block_unformat(void);
void block_double(void);
void block_start(void);
void block_end(void);
void block_to_buffer(void);
void block_wordwrap(void);
int make_buffer(void);
int memory(int);
void openbuff(int, int);
void closebuff(int, int);
void caser(void);
void transpose(void);
void block_paste(void);
void block_cut(void);
void block_yget(void);
void block_get(void);
void keyboard_abort(void);
void hexinput(void);
int dojump(KEY);
void sync_x(void);
void cursor_left(void);
void cursor_right(void);
void cursor_up(void);
void cursor_down(void);
void cursor_lineend(void);
void cursor_linestart(void);
void cursor_filestart(void);
void cursor_fileend(void);
void cursor_pagebottom(void);
void cursor_pagetop(void);
void cursor_pageup(void);
void cursor_pagedown(void);
void cursor_startnword(void);
void cursor_startpword(void);
void cursor_endword(void);
void cursor_startword(void);
void cursor_startpp(void);
void cursor_endpp(void);
void cursor_match(void);
int get_line_number(int);
int cursor_moveto(int);
void cursor_change_refresh(void);
void death_init(void);
char *death_set_rc(char *);
void deathtrap(int);
void un_delete(void);
void del_save(int, int);
void delete_line(void);
void delete_toeos(void);
void delete_toeol(void);
void delete_word(void);
void delete_endword(void);
void dialog_clear(void);
void dialog_window_delete(void);
void dialog_addline(char *, ...);
void dialog_adddata(char *, ...);
int dialog_msg(char *, ...);
void dir_init(void);
char *directory_set_rc_options(char *);
char *get_dirname(char *, int);
void scroll_left(void);
void scroll_right(void);
void set_xoffset(void);
void redisplay(void);
void display_page(int);
void display_line(int, int);
void hilight(int, int);
void change_word(void);
void delete(void);
void backspace(void);
void insert(void);
void insert_tab(void);
void edit(KEY);
MENU *get_edit_menu_ptr(void);
void menu0_enable(void);
void menu1_enable(void);
void menu2_enable(void);
void menu3_enable(void);
void menu4_enable(void);
void menu5_enable(void);
void menu6_enable(void);
void vederror(char *, ...);
void ved_reset(void);
void ved_exit(char *, ...);
void usage(void);
int ved_asprintf(char **, const char *, ...);
char *ved_strsep(char **, const char *);
void file_new(void);
void display_filename(void);
void file_append(void);
void xsave_buffer(void);
void save_buffer(int);
void filemodestring(struct stat *, char *);
void mode_string(int, char *);
time_t get_file_mod_date_name(char *);
int get_filemode(char *);
void set_filename(char *);
void find(void);
void find_next(void);
void find_back(void);
void find_prior(void);
void set_findmatch_table(void);
void help_block(void);
void help_cursor(void);
void help_delete(void);
void help_display(void);
void help_edit(void);
void help_file(void);
void help_search(void);
void help_macros(void);
void help_menus(void);
void help_misc(void);
void help_spell(void);
void set_history_pointer(void);
void set_history_filename(char *);
char *get_history_filename(void);
void set_history_force(char *);
int get_history_force(void);
void history_savefile(void);
void history_loadfile(void);
int v_toupper(int);
int v_tolower(int);
int v_isalpha(int);
int v_isdigit(int);
int v_isxdigit(int);
int v_isalnum(int);
int v_isblank(int);
int v_islower(int);
int v_isupper(int);
int istrue(char *);
void buffer_info(void);
void jump_init(int);
void jump(void);
void mark_position(void);
void mark_jump(void);
void retkey(KEY);
KEY get_pending_key(void);
void keyboard_kill_pending(void);
KEY curkey(void);
void repeat_key(void);
char *macro_define(char *);
void macro_learn(void);
void macro_start(void);
void macro_filename(void);
void macro_file_ext(void);
void macro_file_base(void);
void macro_number(void);
void macro_time1(void);
void macro_time2(void);
void get_cline(void);
void get_line(void);
void copy_line(void);
int main(int, char *[]);
int tabplus(int);
char *truefalse(int);
int lookup_value(char *, NAMETABLE *);
char *lookup_name(int, NAMETABLE *);
void mouse(void);
void move_window(void);
void resize_window(void);
void toggle_crdisplay(void);
char *menutext_crdisplay(void);
void toggle_casematch(void);
char *menutext_casematch(void);
void toggle_overwrite(void);
char *menutext_overwrite(void);
void toggle_autoindent(void);
char *menutext_autoindent(void);
void toggle_cmode(void);
char *menutext_cmode(void);
void set_tabwidth(void);
void set_wildcard(void);
void toggle_autonum(void);
char *menutext_autonum(void);
void autonumber_set(void);
char *option_set(char *);
void quit(void);
void quit_all(void);
int processrc(char *);
void rcfile(int);
void load_rc(void);
void create_rc(void);
void save_status(void);
void load_status(void);
void set_rc_line(void);
void replace(void);
void replace_again(void);
int set_scroll_indicator(char *);
char *get_scroll_side_name(void);
int get_scroll_side_value(void);
int get_scroll_indicator_offset(void);
int get_scroll_indicator_change(void);
void update_scroll_pointer(int);
void doshell(void);
void sigwinch_handler(int);
void terminal_refresh(void);
void speller_save_new_words(void);
void speller_file(void);
void speller_word(void);
void speller_block(void);
char *spell_set(char *);
char *status_set(char *);
char *tilde_fname(char *);
void about_ved(void);
void windows_next(void);
void windows_prior(void);
void windows_new(void);
void windows_file(void);
void windows_raise(void);
void windows_showall(void);
void wm_select_from_mouse(void);
void wm_refresh(void);
void refresh_all(void);
void wrap_buffer(int, int);
char *menutext_wordwrap(void);
void toggle_wordwrap(void);
u_char *strend(u_char * s);

