#!/bin/sh
# This line makes the next one a comment in Tcl \
exec tclsh "$0" ${1+"$@"}  

# BVDP Feb 6, 1997
# Create the cmdtbl.h and cmdnames.txt files

puts "Running maketable.tcl....this generates the files 'cmdtable.h', main.h, cmdsummary.tex  and cmdnames.txt"

set infile [open cmdtable.data r]

set numcmds 0
set menuenum ""

while { ![eof $infile] } {
	set line  [gets $infile]

	set line [string trim $line]
	if { $line == "" } { continue }
	if { [string index $line 0] == "#" } { continue }

	set line "$line  [gets $infile] [gets $infile] "

	foreach { func name flag keylist comment menu}  $line {
		set cmdname [string toupper $func]
		lappend cmdnamelist  $cmdname
		
		if { $menu == "" } {
			puts "missing menu item in\n$line"
			exit }

		if { $menu != "0" & [lsearch -exact $menuenum $menu]==-1} {
			lappend menuenum $menu
		}
			
		set oline "\"$cmdname\",$func,\n\t\t\"$comment\",NULL,\n\t\t\
			\"$name\",NULL,\n\t\t\{"
		if {$keylist != {} } {
			foreach k $keylist { append oline "$k," }
			set l [string length $oline]
			incr l -2
			set oline [string range $oline 0 $l]
		}
		append oline "\},$cmdname,$menu,$flag,[llength $keylist],"
		set o($cmdname) $oline
		set man(N$cmdname)  [string tolower $cmdname]
		set man(C$cmdname) $comment
		set man(K$cmdname) $name
		#set man($cmdname) "\\fB[string tolower $cmdname]\\fR|$comment"
		incr numcmds
	}
}

close $infile

set outfile [open cmdtable.h w]

puts $outfile "/* cmdtable.h"
puts $outfile "	This file generated by makecmds. It contains the"
puts $outfile "	data structure for the main command jumptable and a list"
puts $outfile "	of the command name values. DON'T EDIT THIS FILE\n*/\n"
puts $outfile "#define MAXCMDKEY 8"
puts $outfile "#define KEY_ESC 0x1b"
puts $outfile "#define NUMCMDS $numcmds"
puts $outfile ""

set a "enum \{ HELP_NOT=0,"
puts -nonewline $outfile  $a
set t [string length $a]
foreach a [lsort $menuenum] {
	incr t [string length $a]
	if { $t >= 55 } {
		 puts -nonewline $outfile "\n\t"
		set t [string length $a]
	} else {puts -nonewline $outfile  " "}		
	puts -nonewline $outfile "$a," 	
}
puts $outfile " HELP_TOTAL };"
puts $outfile ""



set a "enum \{ FIRSTVEDCOMMAND=0x1000,"
puts -nonewline $outfile  $a
set t [string length $a]
foreach a [lsort $cmdnamelist] {
	incr t [string length $a]
	if { $t >= 55 } {
		 puts -nonewline $outfile "\n\t"
		set t [string length $a]
	} else {puts -nonewline $outfile  " "}		
	puts -nonewline $outfile "$a," 	
}
puts $outfile "\n\t LASTVEDCOMMAND };"
puts $outfile ""

puts $outfile "typedef struct"
puts $outfile "{"
puts $outfile "	u_char	*cmdname;		/* name of command (uppercase of func name) */"
puts $outfile "	void	(*cmdfunc)(void);	/* pointer to the function */"
puts $outfile "	u_char	*comment;		/* descriptive comment */"
puts $outfile "	u_char	*user_comment;		/* user supplied comment */"
puts $outfile "	u_char	*keyname;		/* name on keyboard (for help) */"
puts $outfile "	u_char	*user_keyname;		/* user replaced keyboard name */"
puts $outfile "	KEY	keys\[MAXCMDKEY\];	/* command seq. keys (ESC> <A>...*/"
puts $outfile "	KEY	cmdvalue;		/* internal value of command */"
puts $outfile "	int	menu;			/* help menu to display this cmd */"
puts $outfile "	u_char	noedit;			/* set==don't permit in view mode */"
puts $outfile "	u_char	kcount;			/* number of keys in command seq. */"
puts $outfile "\}CMDTABLE;\n\n"
puts $outfile "extern CMDTABLE cmdtable\[\];\n"

# Structure def for the alias table

puts $outfile "typedef struct"
puts $outfile "{"
puts $outfile "	KEY	cmdvalue;		/* the command, again */"
puts $outfile "	KEY	keys\[MAXCMDKEY\];	/* more possible key sequences */"
puts $outfile "	u_char	kcount;			/* key count for alias sequence */"	
puts $outfile "}ALIAS_CMDTABLE;\n\n"
puts $outfile "extern ALIAS_CMDTABLE alias_cmdtable\[\];\n"

puts $outfile "#define MAXALIAS 50	/* controls size of alias_cmdtable */"

puts $outfile "\n/* EOF */\n"
close $outfile

# Create a command table include in main.c

set outfile [open main.h w]
puts $outfile "/* main.h"
puts $outfile "	This file generated by makecmds. It contains the"
puts $outfile "	main command jumptable. DON'T EDIT THIS FILE\n*/\n"
puts $outfile "CMDTABLE cmdtable\[\]={"
foreach a [lsort $cmdnamelist] {puts $outfile "\t\{$o($a)\}," }
puts $outfile "\t\{NULL, NULL \}"
puts $outfile "\};\n\n"

puts $outfile "int alias_count=0;		/* counter of defined aliases */"
puts $outfile "ALIAS_CMDTABLE alias_cmdtable\[MAXALIAS\]=\{\};\n"

puts $outfile "/* EOF */\n"
close $outfile

# Summary file... needed by the man page creator

set outfile [open cmdnames.txt w]
foreach a [lsort $cmdnamelist] {
	puts  $outfile "\\fB $man(N$a) \\fR| $man(C$a)"
}
close $outfile

# The summary page for the tex documenation

set outfile [open docs/cmdsummary.tex w]
	puts $outfile "\\appendix
\\chapter{Command Summary\}
\\label{SUMMARY}
\\bigletter\{T\}his chapter was auto-created when your version of \\ved was
compiled. The list of commands reflect the default settings 
in effect at compile time. Since it is possible to change 
the keyboard bindings and the comments though \\ved rc files,
the table may not reflect the state of your program.
"
	puts $outfile "\{\\small
\\tablefirsthead{ Name & Key &Function \\\\ \\hline \\\\}
\\tabletail{\\\\ \\multicolumn{3}{r}
	{\\sl \\footnotesize continued on next page\\dots}\\\\}
\\tablelasttail{\\\\}
\\tablehead{\\multicolumn{3}{l}
	{\\sl \\footnotesize \\dots continued from previous page}\\\\ \\\\}
\\begin{supertabular}{lll}
"

	foreach a [lsort $cmdnamelist] {
	foreach {x xx} { {\\\\} {99} {\}} {\}} {\{} {\{}
			{\\'} {'}  {_} {\\_}  {#} {\\#}
			{&} {\\&} {99} {\\bslash}} {
		  regsub -all $x $man(N$a) $xx  man(N$a) 
		  regsub -all $x $man(C$a) $xx  man(C$a) 
		  regsub -all $x $man(K$a) $xx  man(K$a) 
		}
		
		puts  $outfile "$man(N$a) & $man(K$a) & $man(C$a) \\\\"
	}
	puts $outfile "\\end\{supertabular\} \}"
close $outfile


